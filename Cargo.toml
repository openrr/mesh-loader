[package]
name = "mesh-loader"
version = "0.1.6"
edition = "2021"
rust-version = "1.60"
license = "Apache-2.0"
repository = "https://github.com/openrr/mesh-loader"
keywords = ["asset", "mesh", "stl", "collada", "obj"]
categories = ["parser-implementations", "graphics"]
exclude = ["/.*", "/assets"]
description = """
Fast parser for 3D-model-formats.
"""

[features]
default = ["stl", "collada", "obj"]

# STL (.stl)
# https://en.wikipedia.org/wiki/STL_(file_format)
stl = []
# COLLADA (.dae)
# https://en.wikipedia.org/wiki/COLLADA
collada = ["roxmltree"]
# Wavefront OBJ (.obj)
# https://en.wikipedia.org/wiki/Wavefront_.obj_file
obj = []

[dependencies]
# Used in COLLADA parsing.
roxmltree = { version = "0.19", optional = true }

[dev-dependencies]
anyhow = "1"
assimp = "0.3"
duct = "0.13"
fastrand = "2"
fs-err = "2"
memmap2 = "0.9"
quickcheck = { default-features = false, git = "https://github.com/taiki-e/quickcheck.git", branch = "dev" } # https://github.com/BurntSushi/quickcheck/pull/304 + https://github.com/BurntSushi/quickcheck/pull/282 + lower MSRV
walkdir = "2"

[lints]
workspace = true

[workspace]
resolver = "2"
members = [
    "examples/kiss3d",
]

# This table is shared by projects under github.com/taiki-e.
# It is not intended for manual editing.
[workspace.lints.rust]
improper_ctypes = "warn"
improper_ctypes_definitions = "warn"
missing_debug_implementations = "warn"
non_ascii_idents = "warn"
rust_2018_idioms = "warn"
single_use_lifetimes = "warn"
unreachable_pub = "warn"
# unsafe_op_in_unsafe_fn = "warn" # Set at crate-level instead since https://github.com/rust-lang/rust/pull/100081 is not available on MSRV
[workspace.lints.clippy]
all = "warn" # Downgrade deny-by-default lints
pedantic = "warn"
as_ptr_cast_mut = "warn"
default_union_representation = "warn"
inline_asm_x86_att_syntax = "warn"
trailing_empty_array = "warn"
transmute_undefined_repr = "warn"
undocumented_unsafe_blocks = "warn"
# Suppress buggy or noisy clippy lints
bool_assert_comparison = { level = "allow", priority = 1 }
borrow_as_ptr = { level = "allow", priority = 1 } # https://github.com/rust-lang/rust-clippy/issues/8286
doc_markdown = { level = "allow", priority = 1 }
float_cmp = { level = "allow", priority = 1 } # https://github.com/rust-lang/rust-clippy/issues/7725
manual_assert = { level = "allow", priority = 1 }
manual_range_contains = { level = "allow", priority = 1 } # https://github.com/rust-lang/rust-clippy/issues/6455#issuecomment-1225966395
missing_errors_doc = { level = "allow", priority = 1 }
module_name_repetitions = { level = "allow", priority = 1 }
similar_names = { level = "allow", priority = 1 }
single_match = { level = "allow", priority = 1 }
single_match_else = { level = "allow", priority = 1 }
struct_excessive_bools = { level = "allow", priority = 1 }
struct_field_names = { level = "allow", priority = 1 }
too_many_arguments = { level = "allow", priority = 1 }
too_many_lines = { level = "allow", priority = 1 }
type_complexity = { level = "allow", priority = 1 }
